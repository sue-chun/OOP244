1.	Does the Hero class need to know about the existence of the SuperHero class? (Hint: do a search in Hero.cpp, does the word “SuperHero” appear anywhere?) 
No - only the derived class (SuperHero) class needs to know of the existence of the base class (Hero). 


2.	Does the SuperHero class need to know about the existence of the Hero class? (Hint: do a search in SuperHero.cpp, does the word “Hero” appear anywhere?)
Yes - the derived class needs to know about the existence of the base class to derive from.  The SuperHero class needs to inherit properties from the Hero class. 


3.	The program prints out “Ancient Battle!” when 2 Heroes fight. It prints out “Super Fight!” when 2 SuperHeroes fight. When you tried to make a Hero fight a SuperHero, what did it print out?
The print out was "Ancient Battle!" when a Hero fought a SuperHero.  This is because when a SuperHero and Hero fight, the SuperHero does not use its super power - so when no super powers are used, it will call the * overload that only uses regular attacks/defence.  Calling this * overload with only regular attack/defence will show the printout "Ancient Battle!"


4.	True or False: are the following definitions for main valid? 
int main() {
  Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}

how about this?

int main() {
 (Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) 
                          *
 (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}

True for both. The 3 argument constructor would accept the input if the input is valid. 


Quiz Reflect

I wrote: 
cout << "Item Number: " << i.number << endl;
cout << "Quantity: " << i.quantity << "Price: " << i.price << endl;

Correct answer:
os << "Item Number: " << i.getNumber() << endl;
os << "Quantity: " << i.getQuantity() << "Price: " << i.getPrice() << endl;

I wrote:
cin >> i.number
cin >> i.quantity
cin >> i.price 
return is;

Correct answer:
int number;
int quantity;
double price;

cin >> number;
cin >> quantity;
cin >> price;

is = Item(number, quantity, price);
return is;

